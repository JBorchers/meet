{"version":3,"sources":["Event.js","EventList.js","Alert.js","CitySearch.js","NumberOfEvents.js","mock-data.js","api.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["Event","state","showMore","toggleShowMore","setState","event","this","props","Row","Col","Card","className","summary","start","dateTime","timeZone","location","href","htmlLink","description","onClick","Component","EventList","events","map","id","Alert","getStyle","color","display","style","text","InfoAlert","ErrorAlert","CitySearch","query","suggestions","showSuggestions","undefined","infoText","handleInputChanged","value","target","locations","filter","toUpperCase","indexOf","length","handleItemClicked","suggestion","updateEvents","placeholder","type","onChange","onFocus","NumberOfEvents","numberOfEvents","errorText","e","updateEventsLength","mockData","JSON","parse","stringify","extractLocations","Set","checkToken","accessToken","a","fetch","then","res","json","catch","error","result","removeQuery","window","history","pushState","pathname","newurl","protocol","host","getToken","code","encodeCode","encodeURIComponent","access_token","localStorage","setItem","getEvents","NProgress","startsWith","done","getAccessToken","token","url","axios","get","data","getItem","tokenCheck","removeItem","searchParams","URLSearchParams","search","results","authUrl","App","defaultEvents","eventCount","locationEvents","slice","mounted","inputValue","Boolean","hostname","match","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","atatus","install","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"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","file":"static/js/main.0b91564b.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Card, Row, Col } from 'react-bootstrap';\r\n\r\nclass Event extends Component {\r\n\r\n    state = {\r\n        showMore: false\r\n    }\r\n\r\n    // Toggles the state 'showMore'\r\n    toggleShowMore = () => {\r\n        this.setState({\r\n            showMore: !this.state.showMore\r\n        });\r\n    }\r\n\r\n    render() {\r\n\r\n        const { event } = this.props;\r\n\r\n        return (\r\n            <Row>\r\n                <Col>\r\n            <Card className='event-wrapper'>\r\n                <h2 className=\"event-title\">{event.summary}</h2>\r\n\r\n                <div className='event-time'>\r\n                    <span>{event.start.dateTime}</span>\r\n                    <span>{` (${event.start.timeZone}) `}</span>\r\n                </div>\r\n\r\n                <div>\r\n                    <span>{event.summary} | </span>\r\n                    <span>{event.location}</span>\r\n                </div>\r\n\r\n                {this.state.showMore ? (\r\n                    <div className='show-more'>\r\n                        <h4>About event:</h4>\r\n                        <a href={event.htmlLink}>See details</a>\r\n                        <p className=\"event-description\">{event.description}</p>\r\n                    </div>\r\n                ) : ''}\r\n\r\n\r\n                <div className=\"btn-wrapper\">\r\n                    <button onClick={this.toggleShowMore}>{this.state.showMore ? 'Show less' : 'Show more'}</button>\r\n                </div>\r\n            </Card>\r\n        </Col>\r\n      </Row>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Event; ","// renders a list of events that take place in the city the user has selected\r\n\r\nimport React, { Component } from 'react';\r\nimport Event from './Event';\r\n\r\nclass EventList extends Component {\r\n  render() {\r\n  const { events } = this.props;\r\n  return (\r\n    <ul className=\"event-list\">\r\n      {events.map(event =>\r\n        // adds a key to each child in events list\r\n        <li key={event.id} className=\"event-list-item\">\r\n          <Event event={event} />\r\n        </li>\r\n      )}\r\n    </ul>\r\n  );\r\n}\r\n}\r\n\r\nexport default EventList;","import React, { Component } from 'react';\r\n\r\n\r\nclass Alert extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.color = null;\r\n  }\r\n  \r\n  getStyle = () => {\r\n    return {\r\n      color: this.color,\r\n      display: 'block',\r\n    };\r\n  }\r\n  \r\n  render() {\r\n    return (\r\n      <div className=\"Alert\">\r\n      <p style={this.getStyle()}>{this.props.text}</p>\r\n      </div>\r\n      );\r\n    }\r\n  }\r\n  \r\n  class InfoAlert extends Alert {\r\n    constructor(props) {\r\n      super(props);\r\n      this.color = 'blue';\r\n    }\r\n  }\r\n  \r\n  class ErrorAlert extends Alert {\r\n    constructor(props) {\r\n      super(props);\r\n      this.color = 'red';\r\n    }\r\n  }\r\n  \r\n  \r\n  export {InfoAlert, ErrorAlert};","// where the suer will select a city from the list of suggestions\r\n\r\nimport React, { Component } from 'react';\r\nimport { InfoAlert } from './Alert';\r\n\r\nclass CitySearch extends Component {\r\n  state = {\r\n    query: '',\r\n    suggestions: [],\r\n    showSuggestions: undefined,\r\n    infoText: ''\r\n  }\r\n  \r\n  handleInputChanged = (event) => {\r\n    const value = event.target.value;\r\n    this.setState({ showSuggestions: true });\r\n    const suggestions = this.props.locations.filter((location) => {\r\n      return location.toUpperCase().indexOf(value.toUpperCase()) > -1;\r\n    });\r\n    this.setState({\r\n      query: value,\r\n      suggestions\r\n    });\r\n\r\n    if (value.length === 0) {\r\n      this.setState({\r\n        showSuggestions: undefined\r\n      })\r\n    } else {\r\n      this.setState({\r\n        showSuggestions: true\r\n      })\r\n    }\r\n\r\n   if (suggestions.length === 0) {\r\n      this.setState({\r\n        query: value,\r\n        infoText: \"We can't find the city you are looking for. Please try another city\"\r\n      });\r\n    } else {\r\n      return this.setState({\r\n        query: value,\r\n        suggestions,\r\n        infoText: ''\r\n      });\r\n    }\r\n  }\r\n  \r\n  handleItemClicked = (suggestion) => {\r\n  this.setState({\r\n    query: suggestion,\r\n    showSuggestions: false\r\n  });\r\n\r\n  this.props.updateEvents(suggestion);\r\n}\r\n  \r\n  render() {\r\n    return (\r\n      <div className=\"CitySearch\">\r\n        <InfoAlert text={this.state.infoText} />\r\n      <label>Search Events in a Specific City</label>\r\n      <input\r\n          placeholder=\"Search for a City\"\r\n          type=\"text\"\r\n          className=\"city\"\r\n          value={this.state.query}\r\n          onChange={this.handleInputChanged}\r\n          onFocus={() => { this.setState({ showSuggestions: true }) }} />\r\n      {/* when input is not empty, the suggestion list should be displayed  */}\r\n      {/* when input is empty, the suggestion list should not be displayed */}\r\n      <ul className=\"suggestions\" style={this.state.showSuggestions ? {}: { display: 'none' }}>\r\n      {this.state.suggestions.map((suggestion) => (\r\n        <li\r\n        key={suggestion}\r\n        onClick={() => this.handleItemClicked(suggestion)}\r\n        >{suggestion}</li>\r\n        ))}\r\n        <li onClick={() => this.handleItemClicked(\"all\")}>\r\n        <b>See all cities</b>\r\n        </li>\r\n        </ul>\r\n        </div>\r\n        );\r\n      }\r\n    }\r\n    \r\n    export default CitySearch;","import React, { Component } from 'react';\r\nimport { ErrorAlert } from './Alert';\r\n\r\nclass NumberOfEvents extends Component {\r\n  \r\n  state = {\r\n    numberOfEvents: 32,\r\n    errorText: ''\r\n  }\r\n  \r\n  handleInputChanged = (e) => {\r\n    const value = e.target.value;\r\n    if (value < 1) {\r\n      return this.setState({\r\n        numberOfEvents: '',\r\n        errorText: 'Enter a number between 1 and 32'\r\n      });\r\n    } else if (value > 32) {\r\n      this.setState({\r\n        numberOfEvents: '',\r\n        errorText: 'Enter a number between 1 and 32'\r\n      });\r\n    } else {\r\n      this.setState({\r\n        numberOfEvents: value,\r\n        errorText: ''\r\n      })\r\n      this.props.updateEventsLength(value)\r\n    }          \r\n    \r\n  };\r\n  \r\n  // resetInput = (e) => {\r\n  //   e.target.value = '';\r\n  // }\r\n  \r\n  render() {\r\n    \r\n    return (\r\n      <div className=\"numberOfEvents\">\r\n      <label className=\"events-input\">See a Number of Events</label>\r\n      <input\r\n      type=\"number\"\r\n      placeholder=\"Enter a number of events\"\r\n      className=\"numberInput\"\r\n      value={this.state.numberOfEvents}\r\n      onChange={this.handleInputChanged}\r\n      />\r\n      <ErrorAlert text={this.state.errorText}/>\r\n      </div>\r\n      )\r\n    }\r\n  }\r\n  \r\n  export default NumberOfEvents \r\n\r\n//   NumberOfEvents.propTypes = {\r\n//     updateEventsLength: PropTypes.func.isRequired\r\n// }","// javascript\r\n// const mockData = [\r\n//   {kind:\"calendar#event\",etag:\"\\\"3181161784712000\\\"\",id:\"4eahs9ghkhrvkld72hogu9ph3e_20200519T140000Z\",status:\"confirmed\",htmlLink:\"https://www.google.com/calendar/event?eid=NGVhaHM5Z2hraHJ2a2xkNzJob2d1OXBoM2VfMjAyMDA1MTlUMTQwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",created:\"2020-05-19T19:17:46.000Z\",updated:\"2020-05-27T12:01:32.356Z\",summary:\"Learn JavaScript\",description:\"Have you wondered how you can ask Google to show you the list of the top ten must-see places in London? And how Google presents you the list? How can you submit the details of an application? Well, JavaScript is doing these. :) \\n\\nJavascript offers interactivity to a dull, static website. Come, learn JavaScript with us and make those beautiful websites.\",location:\"London, UK\",creator:{email:\"fullstackwebdev@careerfoundry.com\",self:true},organizer:{email:\"fullstackwebdev@careerfoundry.com\",self:true},start:{dateTime:\"2020-05-19T16:00:00+02:00\",timeZone:\"Europe/Berlin\"},end:{dateTime:\"2020-05-19T17:00:00+02:00\",timeZone:\"Europe/Berlin\"},recurringEventId:\"4eahs9ghkhrvkld72hogu9ph3e\",originalStartTime:{dateTime:\"2020-05-19T16:00:00+02:00\",timeZone:\"Europe/Berlin\"},iCalUID:\"4eahs9ghkhrvkld72hogu9ph3e@google.com\",sequence:0,reminders:{useDefault:true},eventType:\"default\"},{kind:\"calendar#event\",etag:\"\\\"3181159875584000\\\"\",id:\"3qtd6uscq4tsi6gc7nmmtpqlct_20200520T120000Z\",status:\"confirmed\",htmlLink:\"https://www.google.com/calendar/event?eid=M3F0ZDZ1c2NxNHRzaTZnYzdubW10cHFsY3RfMjAyMDA1MjBUMTIwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",created:\"2020-05-19T19:14:30.000Z\",updated:\"2020-05-27T11:45:37.792Z\",summary:\"React is Fun\",description:\"Love HTML, CSS, and JS? Want to become a cool front-end developer? \\n\\nReact is one of the most popular front-end frameworks. There is a huge number of job openings for React developers in most cities. \\n\\nJoin us in our free React training sessions and give your career a new direction. \",location:\"Berlin, Germany\",creator:{email:\"fullstackwebdev@careerfoundry.com\",self:true},organizer:{email:\"fullstackwebdev@careerfoundry.com\",self:true},start:{dateTime:\"2020-05-20T14:00:00+02:00\",timeZone:\"Europe/Berlin\"},end:{dateTime:\"2020-05-20T15:00:00+02:00\",timeZone:\"Europe/Berlin\"},recurringEventId:\"3qtd6uscq4tsi6gc7nmmtpqlct\",originalStartTime:{dateTime:\"2020-05-20T14:00:00+02:00\",timeZone:\"Europe/Berlin\"},iCalUID:\"3qtd6uscq4tsi6gc7nmmtpqlct@google.com\",sequence:0,reminders:{useDefault:true},eventType:\"default\"},\r\n// ];\r\n\r\n// export { mockData };\r\n\r\n\r\n\r\n// ---JSON---\r\n\r\nconst mockDataRAW = [\r\n  {\r\n   \"kind\": \"calendar#event\",\r\n   \"etag\": \"\\\"3181161784712000\\\"\",\r\n   \"id\": \"4eahs9ghkhrvkld72hogu9ph3e_20200519T140000Z\",\r\n   \"status\": \"confirmed\",\r\n   \"htmlLink\": \"https://www.google.com/calendar/event?eid=NGVhaHM5Z2hraHJ2a2xkNzJob2d1OXBoM2VfMjAyMDA1MTlUMTQwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\r\n   \"created\": \"2020-05-19T19:17:46.000Z\",\r\n   \"updated\": \"2020-05-27T12:01:32.356Z\",\r\n   \"summary\": \"Learn JavaScript\",\r\n   \"description\": \"Have you wondered how you can ask Google to show you the list of the top ten must-see places in London? And how Google presents you the list? How can you submit the details of an application? Well, JavaScript is doing these. :) \\n\\nJavascript offers interactivity to a dull, static website. Come, learn JavaScript with us and make those beautiful websites.\",\r\n   \"location\": \"London, UK\",\r\n   \"creator\": {\r\n    \"email\": \"fullstackwebdev@careerfoundry.com\",\r\n    \"self\": true\r\n   },\r\n   \"organizer\": {\r\n    \"email\": \"fullstackwebdev@careerfoundry.com\",\r\n    \"self\": true\r\n   },\r\n   \"start\": {\r\n    \"dateTime\": \"2020-05-19T16:00:00+02:00\",\r\n    \"timeZone\": \"Europe/Berlin\"\r\n   },\r\n   \"end\": {\r\n    \"dateTime\": \"2020-05-19T17:00:00+02:00\",\r\n    \"timeZone\": \"Europe/Berlin\"\r\n   },\r\n   \"recurringEventId\": \"4eahs9ghkhrvkld72hogu9ph3e\",\r\n   \"originalStartTime\": {\r\n    \"dateTime\": \"2020-05-19T16:00:00+02:00\",\r\n    \"timeZone\": \"Europe/Berlin\"\r\n   },\r\n   \"iCalUID\": \"4eahs9ghkhrvkld72hogu9ph3e@google.com\",\r\n   \"sequence\": 0,\r\n   \"reminders\": {\r\n    \"useDefault\": true\r\n   },\r\n   \"eventType\": \"default\"\r\n  },\r\n\r\n  {\r\n   \"kind\": \"calendar#event\",\r\n   \"etag\": \"\\\"3181159875584000\\\"\",\r\n   \"id\": \"3qtd6uscq4tsi6gc7nmmtpqlct_20200520T120000Z\",\r\n   \"status\": \"confirmed\",\r\n   \"htmlLink\": \"https://www.google.com/calendar/event?eid=M3F0ZDZ1c2NxNHRzaTZnYzdubW10cHFsY3RfMjAyMDA1MjBUMTIwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\r\n   \"created\": \"2020-05-19T19:14:30.000Z\",\r\n   \"updated\": \"2020-05-27T11:45:37.792Z\",\r\n   \"summary\": \"React is Fun\",\r\n   \"description\": \"Love HTML, CSS, and JS? Want to become a cool front-end developer? \\n\\nReact is one of the most popular front-end frameworks. There is a huge number of job openings for React developers in most cities. \\n\\nJoin us in our free React training sessions and give your career a new direction. \",\r\n   \"location\": \"Berlin, Germany\",\r\n   \"creator\": {\r\n    \"email\": \"fullstackwebdev@careerfoundry.com\",\r\n    \"self\": true\r\n   },\r\n   \"organizer\": {\r\n    \"email\": \"fullstackwebdev@careerfoundry.com\",\r\n    \"self\": true\r\n   },\r\n   \"start\": {\r\n    \"dateTime\": \"2020-05-20T14:00:00+02:00\",\r\n    \"timeZone\": \"Europe/Berlin\"\r\n   },\r\n   \"end\": {\r\n    \"dateTime\": \"2020-05-20T15:00:00+02:00\",\r\n    \"timeZone\": \"Europe/Berlin\"\r\n   },\r\n   \"recurringEventId\": \"3qtd6uscq4tsi6gc7nmmtpqlct\",\r\n   \"originalStartTime\": {\r\n    \"dateTime\": \"2020-05-20T14:00:00+02:00\",\r\n    \"timeZone\": \"Europe/Berlin\"\r\n   },\r\n   \"iCalUID\": \"3qtd6uscq4tsi6gc7nmmtpqlct@google.com\",\r\n   \"sequence\": 0,\r\n   \"reminders\": {\r\n    \"useDefault\": true\r\n   },\r\n   \"eventType\": \"default\"\r\n  },\r\n];\r\n\r\n\r\nconst mockData = JSON.parse(JSON.stringify(mockDataRAW)); //convert JSON to Js\r\nexport { mockData };","import { mockData } from './mock-data';\r\nimport axios from 'axios';\r\nimport NProgress from 'nprogress';\r\n\r\nexport const extractLocations = (events) => {\r\n  var extractLocations = events.map((event) => event.location);\r\n  var locations = [...new Set(extractLocations)];\r\n  return locations;\r\n};\r\n\r\n// This function takes the accessToken you found and checks whether it’s a valid token or not. If it’s not, then you follow the redirect logic and send the user to the Google Authorization screen.\r\nexport const checkToken = async (accessToken) => {\r\n  const result = await fetch(\r\n    `https://www.googleapis.com/oauth2/v1/tokeninfo?access_token=${accessToken}`\r\n  )\r\n    .then((res) => res.json())\r\n    .catch((error) => error.json());\r\n\r\n  return result;\r\n};\r\n\r\nconst removeQuery = () => {\r\n  if (window.history.pushState && window.location.pathname) {\r\n    var newurl =\r\n      window.location.protocol +\r\n      \"//\" +\r\n      window.location.host +\r\n      window.location.pathname;\r\n    window.history.pushState(\"\", \"\", newurl);\r\n  } else {\r\n    newurl = window.location.protocol + \"//\" + window.location.host;\r\n    window.history.pushState(\"\", \"\", newurl);\r\n  }\r\n};\r\n\r\nconst getToken = async (code) => {\r\n  const encodeCode = encodeURIComponent(code);\r\n  const { access_token } = await fetch(\r\n    'https://u9uttyc113.execute-api.eu-central-1.amazonaws.com/dev/api/token' + '/' + encodeCode\r\n  )\r\n    .then((res) => {\r\n      return res.json(); \r\n    })\r\n    .catch((error) => error);\r\n\r\n  access_token && localStorage.setItem(\"access_token\", access_token);\r\n\r\n  return access_token;\r\n};\r\n\r\nexport const getEvents = async () => {\r\n  NProgress.start();\r\n\r\n  // uses mock data if using local host; otherwise, real api is used\r\n  if (window.location.href.startsWith('http://localhost')) {\r\n    NProgress.done();\r\n    return mockData;\r\n  }\r\n\r\n  const token = await getAccessToken();\r\n\r\n  if (token) {\r\n    removeQuery();\r\n    const url = 'https://u9uttyc113.execute-api.eu-central-1.amazonaws.com/dev/api/get-events' + '/' + token;\r\n    const result = await axios.get(url);\r\n    if (result.data) {\r\n      var locations = extractLocations(result.data.events);\r\n      localStorage.setItem(\"lastEvents\", JSON.stringify(result.data));\r\n      localStorage.setItem(\"locations\", JSON.stringify(locations));\r\n    }\r\n    NProgress.done();\r\n    return result.data.events;\r\n  }\r\n};\r\n\r\nexport const getAccessToken = async () => {\r\n  const accessToken = localStorage.getItem('access_token');\r\n  const tokenCheck = accessToken && (await checkToken(accessToken));\r\n\r\n  // If no token is found (!accessToken), it then checks for an authorization code.\r\n  if (!accessToken || tokenCheck.error) {\r\n    await localStorage.removeItem(\"access_token\");\r\n    const searchParams = new URLSearchParams(window.location.search);\r\n    const code = await searchParams.get(\"code\");\r\n    // If no authorization code is found (!code), the user is automatically redirected to the Google Authorization screen, where they can sign in and receive their code. \r\n    if (!code) {\r\n      const results = await axios.get(\r\n        \"https://u9uttyc113.execute-api.eu-central-1.amazonaws.com/dev/api/get-auth-url\"\r\n      );\r\n      const { authUrl } = results.data;\r\n      return (window.location.href = authUrl);\r\n    }\r\n    return code && getToken(code);\r\n  }\r\n  return accessToken;\r\n}","// parent component to CitySearch and EventList\n// receives a click event from CitySearch when user selects a new city\n// then gets a list of events and passes it through EventList\n\nimport React, { Component } from 'react';\nimport './App.css';\nimport EventList from './EventList';\nimport CitySearch from './CitySearch';\nimport NumberOfEvents from './NumberOfEvents';\nimport { getEvents, extractLocations } from './api';\nimport './nprogress.css';\n\nclass App extends Component {\n  state = {\n    events: [],\n    locations: [],\n    NumberOfEvents: 32,\n    defaultEvents: 'all'\n  }\n  \n  updateEvents = (location, eventCount) => {\n\t\tgetEvents().then((events) => {\n\t\t\tconst locationEvents = (location === 'all') ? events.slice(0, this.state.numberOfEvents) : \n\t\t\tevents.filter((event) => event.location === location);\n\t\t\tif (this.mounted) {\n\t\t\t\tthis.setState({ \n\t\t\t\t\tevents: locationEvents.slice(0, eventCount),\n\t\t\t\t\tdefaultEvents: location\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n\nupdateEventsLength(inputValue) {\n\t\tthis.setState({\n\t\t\tnumberOfEvents: inputValue\n\t\t});\n\t\tconst { defaultEvents } = this.state\n\t\tthis.updateEvents(defaultEvents, inputValue);\n\t}\n\ncomponentDidMount() {\n    const { numberOfEvents } = this.state;\n    this.mounted = true;\n    getEvents().then((events) => {\n      if (this.mounted) {\n        this.setState({\n          events: events.slice(0, numberOfEvents),\n          locations: extractLocations(events)\n        });\n      }\n    });\n  }\n\n  componentWillUnmount(){\n    this.mounted = false;\n  }\n  \n  render() {\n    return (\n      <div className=\"App\">\n      <CitySearch locations={this.state.locations} updateEvents={this.updateEvents} />\n      {/* pass state to EventList as prop of events */}\n      <NumberOfEvents numberOfEvents={this.state.numberOfEvents} updateEventsLength={(value) => this.updateEventsLength(value)} />\n      <EventList events={this.state.events} />\n      </div>\n      );\n    }\n  }\n  \n  export default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\nimport * as atatus from 'atatus-spa';\natatus.config('54c892738c364e39a951dc281937d5ac').install();\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}